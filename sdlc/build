#!/bin/bash

# Load environment variables from .env if present
if [ -f ".env" ]; then
    export $(grep -v '^#' .env | xargs)
fi

if [ -z "$DOCKER_USERNAME" ]; then
    handle_error "Error: DOCKER_USERNAME is not set. Please ensure it's defined in your .env file or as an environment variable."
fi

if [ -z "$DOCKER_ACCESS_TOKEN" ]; then
    handle_error "Error: DOCKER_ACCESS_TOKEN is not set. Please ensure it's defined in your .env file or as an environment variable."
fi

if [ -z "$DOCKER_REPO_NAME" ]; then
    handle_error "Error: DOCKER_REPO_NAME is not set. Please ensure it's defined in your .env file or as an environment variable."
fi

# Validate Docker credentials
echo -e "${YELLOW}Validating Docker access token...${NC}"
echo "${DOCKER_ACCESS_TOKEN}" | docker login -u ${DOCKER_USERNAME} --password-stdin
if [ $? -ne 0 ]; then
    echo -e "${RED}Docker login failed. Please check your DOCKER_ACCESS_TOKEN. Exiting...${NC}"
    exit 1
fi

echo -e "${GREEN}Docker login successful! Proceeding with the deployment...${NC}"

# Build Docker image
echo -e "${YELLOW}Building Docker image...${NC}"
docker compose build -t ${DOCKER_USERNAME}/${DOCKER_REPO_NAME}:latest -f Dockerfile .
if [ $? -ne 0 ]; then
    echo -e "${RED}Docker image build failed. Exiting...${NC}"
    exit 1
fi
